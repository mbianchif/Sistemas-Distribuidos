name: moviesanalyzer
services:
  client:
    container_name: client
    build: client
    env_file: client/.env
    volumes:
      - .data:/data
    depends_on:
      - gateway

  # ====================== Rabbit - Gateway ======================

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s

  gateway:
    container_name: gateway
    build: gateway
    ports:
      - 9090:9090
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - envs/gateway/.env.gateway

  # ====================== Sanitizers ======================

  sanitize-movies-0:
    container_name: sanitize-movies-0
    build:
      context: workers
      dockerfile: dockerfiles/sanitize.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sanitize/.env.movies
    environment:
      - ID=0
      - OUTPUT_COPIES=1,2,1

  # ====================== Filters ======================

  filter-production_countries_length-0:
    container_name: filter-production_countries_length-0
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.production_countries_length
    environment:
      - ID=0
      - OUTPUT_COPIES=1

  filter-production_countries_length-1:
    container_name: filter-production_countries_length-1
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.production_countries_length
    environment:
      - ID=1
      - OUTPUT_COPIES=1

  # ====================== Explodes ======================

  explode-production_countries-1:
    container_name: explode-production_countries-1
    build:
      context: workers
      dockerfile: dockerfiles/explode.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/explode/.env.production_countries

  # ====================== GroupBys ======================

  groupby-country_sum_budget-0:
    container_name: groupby-country_sum_budget-0
    build:
      context: workers
      dockerfile: dockerfiles/groupby.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/groupby/.env.country_sum_budget
    environment:
      - ID=0
      - OUTPUT_COPIES=1

# ====================== Tops ======================

  top-5_budget-0:
    container_name: top-5_budget-0
    build:
      context: workers
      dockerfile: dockerfiles/top.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/top/.env.5_budget
    environment:
      - ID=0
      - OUTPUT_COPIES=1

  # ====================== Sinks ======================

  sink-2-0:
    container_name: sink-2-0
    build:
      context: workers
      dockerfile: dockerfiles/sink.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sink/.env.2
    environment:
      - ID=0
      - OUTPUT_COPIES=1
