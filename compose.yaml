name: moviesanalyzer
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s

  gateway:
    container_name: gateway
    build: gateway
    env_file: gateway/.env
    environment:
      - OUTPUT_EXCHANGE_NAME=gateway
      - OUTPUT_EXCHANGE_TYPE=direct
      - OUTPUT_QUEUE_NAMES=movies,credits,ratings
      - OUTPUT_QUEUE_KEYS=movies,credits,ratings
    ports:
      - 9090:9090
    depends_on:
      rabbitmq:
        condition: service_healthy

  client:
    container_name: client
    build: client
    env_file: client/.env
    volumes:
      - .data:/data
    depends_on:
      - gateway

  sanitize-movies:
    container_name: sanitize-movies
    build:
      context: workers
      dockerfile: dockerfiles/sanitize.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=gateway
      - INPUT_EXCHANGE_TYPE=direct
      - INPUT_QUEUE_NAMES=movies
      - INPUT_QUEUE_KEYS=movies

      # Output
      - OUTPUT_EXCHANGE_NAME=sanitize_movies
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=divider,filter-production_countries_length,filter-release_date_since_2000
      - OUTPUT_QUEUE_KEYS=,,

      # Worker
      - SELECT=id,title,genres,release_date,overview,production_countries,spoken_languages,budget,revenue

      # Sanitize
      - HANDLER=movies
    depends_on:
      rabbitmq:
        condition: service_healthy

  divider:
    container_name: divider
    build:
      context: workers
      dockerfile: dockerfiles/divider.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=sanitize_movies
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=divider
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=divider
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=sentiment_model
      - OUTPUT_QUEUE_KEYS=

      # Worker
      - SELECT=overview,rate_revenue_budget
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-production_countries_length:
    container_name: filter-production_countries_length
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=sanitize_movies
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=filter-production_countries_length
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=filter-production_countries_length
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=null
      - OUTPUT_QUEUE_KEYS=

      # Worker
      - SELECT=production_countries,budget

      # Filter
      - HANDLER=length
      - KEY=production_countries
      - VALUE=1
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-release_date_since_2000:
    container_name: filter-release_date_since_2000
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=sanitize_movies
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=filter-release_date_since_2000
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=filter-release_date_since_2000
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=filter-production_countries_argentina_spain,filter_production_countries_argentina
      - OUTPUT_QUEUE_KEYS=,

      # Worker
      - SELECT=id,title,genres,production_countries,release_date

      # Filter
      - HANDLER=range
      - KEY=release_date
      - VALUE=2000,
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-production_countries_argentina_spain:
    container_name: filter-production_countries_argentina_spain
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=filter-release_date_since_2000
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=filter-production_countries_argentina_spain
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=filter-production_countries_argentina_spain
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=filter-release_date_upto_2010
      - OUTPUT_QUEUE_KEYS=

      # Worker
      - SELECT=title,genres,release_date

      # Filter
      - HANDLER=contains
      - KEY=production_countries
      - VALUE=Argentina,Spain
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-production_countries_argentina:
    container_name: filter-production_countries_argentina
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=filter-release_date_since_2000
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=filter-production_countries_argentina
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=filter-production_countries_argentina
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=null
      - OUTPUT_QUEUE_KEYS=

      # Worker
      - SELECT=id,title

      # Filter
      - HANDLER=contains
      - KEY=production_countries
      - VALUE=Argentina
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-release_date_upto_2010:
    container_name: filter-release_date_upto_2010
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=filter-production_countries_argentina_spain
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=filter-release_date_upto_2010
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=filter-release_date_upto_2010
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=sink_q1
      - OUTPUT_QUEUE_KEYS=

      # Worker
      - SELECT=title,genres

      # Filter
      - HANDLER=range
      - KEY=release_date
      - VALUE=,2010
    depends_on:
      rabbitmq:
        condition: service_healthy

  sentiment:
    container_name: sentiment
    build:
      context: workers
      dockerfile: dockerfiles/sentiment.Dockerfile
    env_file: workers/.env
    environment:
      # Input
      - INPUT_EXCHANGE_NAME=divider
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE_NAMES=sentiment_model
      - INPUT_QUEUE_KEYS=

      # Output
      - OUTPUT_EXCHANGE_NAME=sentiment_model
      - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAMES=groupby_sentiment_mean_rate_revenue_budget
      - OUTPUT_QUEUE_KEYS=

      # Worker
      - SELECT=sentiment,rate_revenue_budget
    depends_on:
      rabbitmq:
        condition: service_healthy
