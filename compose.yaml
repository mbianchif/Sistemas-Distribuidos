name: moviesanalyzer
services:
  client:
    container_name: client
    build: client
    env_file: client/.env
    volumes:
      - .data:/data
    depends_on:
      - gateway

  # ====================== Rabbit - Gateway ======================

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s

  gateway:
    container_name: gateway
    build: gateway
    ports:
      - 9090:9090
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - envs/gateway/.env.gateway

  # ====================== Sanitizers ======================

  sanitize-movies-1:
    container_name: sanitize-movies-1
    build:
      context: workers
      dockerfile: dockerfiles/sanitize.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sanitize/.env.movies

  sanitize-credits-1:
    container_name: sanitize-credits-1
    build:
      context: workers
      dockerfile: dockerfiles/sanitize.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sanitize/.env.credits

  sanitize-ratings-1:
    container_name: sanitize-ratings-1
    build:
      context: workers
      dockerfile: dockerfiles/sanitize.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sanitize/.env.ratings

  # ====================== Filters ======================

  filter-production_countries_length-1:
    container_name: filter-production_countries_length-1
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.production_countries_length

  filter-release_date_since_2000-1:
    container_name: filter-release_date_since_2000-1
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.release_date_since_2000

  filter-production_countries_argentina_spain-1:
    container_name: filter-production_countries_argentina_spain-1
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.production_countries_argentina_spain

  filter-production_countries_argentina-1:
    container_name: filter-production_countries_argentina-1
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.production_countries_argentina

  filter-release_date_upto_2010-1:
    container_name: filter-release_date_upto_2010-1
    build:
      context: workers
      dockerfile: dockerfiles/filter.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/filter/.env.release_date_upto_2010

  # ====================== Explodes ======================

  explode-production_countries-1:
    container_name: explode-production_countries-1
    build:
      context: workers
      dockerfile: dockerfiles/explode.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/explode/.env.production_countries

  explode-cast-1:
    container_name: explode-cast-1
    build:
      context: workers
      dockerfile: dockerfiles/explode.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/explode/.env.cast

  # ====================== GroupBys ======================

  groupby-sentiment_mean_rate_revenue_budget-1:
    container_name: groupby-sentiment_mean_rate_revenue_budget-1
    build:
      context: workers
      dockerfile: dockerfiles/groupby.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/groupby/.env.sentiment_mean_rate_revenue_budget

  groupby-country_sum_budget-1:
    container_name: groupby-country_sum_budget-1
    build:
      context: workers
      dockerfile: dockerfiles/groupby.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/groupby/.env.country_sum_budget

  groupby-id_actor_count-1:
    container_name: groupby-id_actor_count-1
    build:
      context: workers
      dockerfile: dockerfiles/groupby.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/groupby/.env.id_actor_count

  groupby-id_title_mean_rating-1:
    container_name: groupby-id_title_mean_rating-1
    build:
      context: workers
      dockerfile: dockerfiles/groupby.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/groupby/.env.id_title_mean_rating

  # ====================== Dividers ======================

  divider-1:
    container_name: divider-1
    build:
      context: workers
      dockerfile: dockerfiles/divider.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/divider/.env.divider

  # ====================== Sentiments ======================

  sentiment-1:
    container_name: sentiment-1
    build:
      context: workers
      dockerfile: dockerfiles/sentiment.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sentiment/.env.sentiment

  # ====================== Sinks ======================

  sink-q1:
    container_name: sink-q1
    build:
      context: workers
      dockerfile: dockerfiles/sink.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/sink/.env.sink-q1

# ====================== MinMax ======================

  minmax-rating-1:
    container_name: minmax-rating-1
    build:
      context: workers
      dockerfile: dockerfiles/minmax.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - workers/.env
      - envs/minmax/.env.rating